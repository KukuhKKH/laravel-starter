<script>
    // Get page Name
    <h1>{{ strtoupper(request()->segment(count(request()->segments()))) }}</h1>

    // Breadcrumb Example
    @php
        $path = explode('/', request()->path());
    @endphp
    @forelse ($path as $key => $value)
        @if (is_numeric($value) || strpos($value, '='))
            @php
                continue;
            @endphp
        @endif
        @if ($key == 0)
            <div class="breadcrumb-item active"><a href="{{ route($value) }}">{{ ucfirst($value) }}</a></div>
        @else
            <div class="breadcrumb-item">{{ ucfirst($value) }}</div>
        @endif
    @empty

    @endforelse

    // CSRF Token
    <meta name="csrf-token" content="{{ csrf_token() }}">
    const CSRF_TOKEN = document.querySelector('meta[name="csrf-token"]').getAttribute("content")

    $(document).ready(function() {
        // Ajax Paginate
        $(document).on('click', '.pagination a', function(event) {
            event.preventDefault()
            // Jika di url terdapat "page=" maka di pisah
            let page = $(this).attr('href').split('page=')[1]
            let l = window.location.href
            let url = ''
            // Jika tidak ada keyword / kata kunci yang sedang dicari
            if(l.includes('?')) {
                url = l + "&page=" + page
            } else {
                url = l + "?page=" + page
            }

            refresh_table(url)
        })
    })

    const refresh_table = url => {
        new Promise((resolve, reject) => {
            $("#table_data").LoadingOverlay('show')
            $axios.get(url)
                .then(({data}) => {
                    $("#table_data").LoadingOverlay('hide')
                    $('#table_data').html(data)
                })
                .catch(err => {
                    console.log(err)
                    $("#table_data").LoadingOverlay('hide')
                    $swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    })
                })
        })
    }

    // Perlu library loadingoverlay
    const loading = (type , selector = null, options = null) => {
        if(selector) {
            $(selector).LoadingOverlay(type, options)
        } else {
            $.LoadingOverlay(type, options)
        }
    }
</script>
